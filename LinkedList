#include <iostream>
#include <bits/stdc++.h>

using namespace std;

struct ListNode{
    int data;
    ListNode *next;
    ListNode(int m_data){
        data=m_data;
        next=NULL;
    }
};

class LinkedList{
  private:
  ListNode *head;
  
  public:
  LinkedList(){
      head=NULL;
  }
  
  void AddNode(int data){
      if(head!=NULL){
          ListNode *temp=head;
          while(temp->next!=NULL){
              temp=temp->next;
          }
          temp->next=new ListNode(data);
      }else{
          head=new ListNode(data);
      }
  }
  
  void PrintList(){
    if(head!=NULL){
          ListNode *temp=head;
          cout<<endl;
          while(temp!=NULL){
              cout<<temp->data<<"->";
              temp=temp->next;
          }
          cout<<endl;
    }else{
          cout<<"List is empty !";
      }
  }
  
  void ReverseList(){
      if(head!=NULL){
        ListNode *previous=NULL;
        ListNode *current=head;
        ListNode *nextofCurrent=NULL;
        
        while(current!=NULL){
            nextofCurrent=current->next;
            current->next=previous;

            previous=current;
            current=nextofCurrent;
        
        }
        head=previous;
      }else{
          cout<<"List is empty !";
      }
  }
};


int main(){
    
    LinkedList list_m;
    list_m.AddNode(1);
    list_m.AddNode(3);
    list_m.AddNode(5);
    list_m.AddNode(7);
    list_m.AddNode(9);
    list_m.AddNode(11);
    list_m.AddNode(13);
    
    list_m.PrintList();
    
    list_m.ReverseList();
    
    list_m.PrintList();
    
